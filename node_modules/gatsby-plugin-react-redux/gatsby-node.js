"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.onPreBootstrap = void 0;

var _fs = _interopRequireDefault(require("fs"));

var _path = _interopRequireDefault(require("path"));

var _os = _interopRequireDefault(require("os"));

var _util = _interopRequireDefault(require("util"));

var mkdirAsync = _util["default"].promisify(_fs["default"].mkdir);

var writeFileAsync = _util["default"].promisify(_fs["default"].writeFile);

var onPreBootstrap = function onPreBootstrap(_ref, _temp) {
  var store = _ref.store;

  var _ref2 = _temp === void 0 ? {} : _temp,
      pathToCreateStoreModule = _ref2.pathToCreateStoreModule;

  if (!pathToCreateStoreModule) {
    throw new Error('[gatsby-plugin-react-redux]: missing required option "pathToCreateStoreModule"');
  }

  var _store$getState = store.getState(),
      program = _store$getState.program; // Create proxy file that imports user's `createStore` module
  // We need it to have static require on the client


  var module = "module.exports = require(\"" + (_path["default"].isAbsolute(pathToCreateStoreModule) ? pathToCreateStoreModule : _path["default"].join(program.directory, pathToCreateStoreModule)) + "\")";

  if (_os["default"].platform() === 'win32') {
    module = module.split('\\').join('\\\\');
  }

  var dir = __dirname + "/.tmp";
  var promise = Promise.resolve(null);

  if (!_fs["default"].existsSync(dir)) {
    promise = promise.then(function () {
      return mkdirAsync(dir);
    });
  }

  return promise.then(function () {
    return writeFileAsync(dir + "/createStore.js", module);
  });
};

exports.onPreBootstrap = onPreBootstrap;